<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.eusashead.bjugquerydsl</groupId>
	<artifactId>commerce</artifactId>
	<packaging>war</packaging>
	<version>1.0.1-SNAPSHOT</version>
	<name>commerce</name>
	<url>http://maven.apache.org</url>
	<properties>
		<encoding>UTF-8</encoding>
		<org.springframework.version>3.2.3.RELEASE</org.springframework.version>
		<org.hibernate.version>4.1.12.Final</org.hibernate.version>
		<org.unitils.version>3.3</org.unitils.version>
		<org.h2.version>1.3.168</org.h2.version>
	</properties>
	
	<scm>
		<connection>scm:git:ssh://git@github.com:patrickvankann/bjug-querydsl.git</connection>
		<developerConnection>scm:git:git@github.com:patrickvankann/bjug-querydsl.git</developerConnection>
		<url>https://github.com/patrickvankann/bjug-querydsl</url>
		<tag>HEAD</tag>
	</scm>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<dependencies>

		<!-- Servlet API -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>3.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager
            </artifactId>
			<version>${org.hibernate.version}</version>
		</dependency>

		<!-- Validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.0.Final</version>
		</dependency>

		<!-- Javassist (needed by Hibernate) -->
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>

		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring Context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring AOP -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring TX -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring Hibernate -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring JDBC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring Web MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring Test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring Data Core -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>1.6.0.M1</version>
		</dependency>

		<!-- Spring Data JPA -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.4.0.M1</version>
		</dependency>

		<!-- Spring Data MongoDB -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>1.3.0.M1</version>
		</dependency>

		<!-- Spring Data REST -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
			<version>1.0.0.RC3</version>
		</dependency>

		<!-- Spring HATEOAS support -->
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
			<version>0.6.0.RELEASE</version>
		</dependency>

		<!-- Query DSL core -->
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<version>3.2.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Query DSL for JPA -->
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
			<version>3.2.0</version>
		</dependency>

		<!-- Query DSL for MongoDB -->
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-mongodb</artifactId>
			<version>3.2.0</version>
		</dependency>

		<!-- Query DSL for JDBC -->
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-sql</artifactId>
			<version>3.2.0</version>
		</dependency>

		<!-- Needed to serialize Hibernate collections to JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate4</artifactId>
			<version>2.1.2</version>
		</dependency>

		<!-- JAXB for xml content -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.6</version>
		</dependency>

		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<!-- EasyMock -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>


		<!-- Unitils - DBUnit -->
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-dbunit</artifactId>
			<version>${org.unitils.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Unitils - ORM -->
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-orm</artifactId>
			<version>${org.unitils.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.persistence</groupId>
					<artifactId>persistence-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Unitils - Inject -->
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-inject</artifactId>
			<version>${org.unitils.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Unitils - Mock -->
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-mock</artifactId>
			<version>${org.unitils.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- DBCP -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Commons Lang -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- SLF4J API -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.6</version>
		</dependency>

		<!-- SLF4J over Log4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.6</version>
		</dependency>

		<!-- Log4J -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- DBUnit -->
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.8</version>
			<scope>test</scope>
		</dependency>

		<!-- JDBC Driver -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${org.h2.version}</version>
		</dependency>

		<!-- AspectJ dependencies -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.0</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.0</version>
		</dependency>

		<!-- BeanUtils!!! -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>

		<dependency>
			<groupId>net.eusashead.hateoas</groupId>
			<artifactId>spring-halbuilder</artifactId>
			<version>1.1.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<forkMode>always</forkMode>
					<argLine>-Xmx1050m -XX:MaxPermSize=512M</argLine>
				</configuration>
			</plugin>
			
			<!-- When using xml-less approach, you need to disable Maven's warning 
				about missing web.xml -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.atlassian.maven.plugins</groupId>
				<artifactId>maven-jgitflow-plugin</artifactId>
				<version>1.0-alpha8</version>
				<configuration>
					<!-- see goals wiki page for configuration options -->
				</configuration>
			</plugin>

			<!-- Jetty -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.4.v20120524</version>
				<configuration>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>8080</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<stopPort>9966</stopPort>
					<stopKey>foo</stopKey>
				</configuration>
			</plugin>

			<!-- Handles QueryDSL APT code generation -->
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.0.9</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor,org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor,com.mysema.query.apt.QuerydslAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Handles QueryDSL JDBC code generation -->
			<plugin>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>export</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jdbcDriver>org.h2.Driver</jdbcDriver>
					<jdbcUrl>jdbc:h2:~/COMMERCE_DB</jdbcUrl>
					<jdbcUser>secret</jdbcUser>
					<jdbcPassword>squirrel</jdbcPassword>
					<exportBeans>true</exportBeans>
					<packageName>net.eusashead.bjugquerydsl.data.jdbc</packageName>
					<targetFolder>${project.basedir}/target/generated-sources/java</targetFolder>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>${org.h2.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Create the database so that it can be reverse engineered -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.3</version>
				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>${org.h2.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>org.h2.Driver</driver>
					<url>jdbc:h2:~/COMMERCE_DB</url>
					<username>secret</username>
					<password>squirrel</password>
					<srcFiles>
						<srcFile>src/main/resources/schema.sql</srcFile>
					</srcFiles>
					<onError>continue</onError>
				</configuration>
			</plugin>


			<!-- PMD -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.0.1</version>
			</plugin>

		</plugins>

	</build>

	<repositories>

		<repository>
			<id>spring-milestone</id>
			<name>Spring Maven MILESTONE Repository</name>
			<url>http://repo.springsource.org/libs-milestone</url>
		</repository>

	</repositories>

</project>